1.条件分支语句（switch语句）
	语法：
		switch(条件表达式){
			case 表达式:
				语句...
				break;
			case 表达式:
				语句...
				break;
			default :
				语句...
				break;
		}
		
	执行流程：
		switch...case语句在执行时会依次将switch后的条件表达式的值和case后的表达式的值进行全等比较，
			如果判断结果true，则从当前case处开始向下执行代码，包括下边的其他case后的代码，
				如果不希望执行其他case后的代码，可以在语句后边添加break
			如果判断结果false，则继续向下判断
			如果所有的判断结果都是false，则从default处开始向下执行代码
			
2.循环语句
	- 循环语句可以将指定的代码反复执行多次
	- while循环
		- 语法：
			while(条件表达式){
				语句...
			}
			
			- 执行流程：
				while循环在执行时，会先对条件表达式进行求值判断，
					如果判断结果为false，则终止循环
					如果判断结果为true，则执行循环体
					循环体执行完毕，继续对条件表达式进行求值判断，以此类推
			
	- do...while循环
		- 语法：
			do{
				语句...
			}while(条件表达式)
			
			- 执行流程：
				do...while循环在执行时，会先执行循环体，然后再对while后的条件表达式进行求值判断，
					如果判断结果为false，则终止循环
					如果判断结果为true，则继续执行循环体
					循环体执行完毕，继续对条件表达式进行求值判断，以此类推
					
			- 和while的区别
				- do...while是先执行后判断，而while是先判断后执行
					do...while可以确保循环体至少执行一次，而while不行
	
	- for循环	
		- 语法：
			for(①初始化表达式;②条件表达式;④更新表达式){
				③语句...
			}
			
		- 执行流程：
			- for循环在执行时会
				①执行初始化表达式，初始化变量，初始化表达式只会执行一次。
				②对条件表达式进行求值判断，根据判断结果来决定是否执行循环体
					- 如果判断结果为false，则终止循环
					- 如果判断结果为true，则执行循环体
				③执行循环体，循环体执行完毕
				④执行更新表达式，对变量进行更新操作
				⑤重复第②步

	- 死循环
		- 会一直执行的循环就是死循环
		- while(true){
			语句...
		  }
		  
		 - for(;;){
			语句...
		   } 
		
	
	
	