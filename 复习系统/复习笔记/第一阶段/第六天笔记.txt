1.定位
	- 绝对定位
		- 当将元素的position属性设置为absolute时，则开启了元素的绝对定位
		- 绝对定位的特点
			1.绝对定位的元素会完全脱离文档流
			2.绝对定位会改变元素的性质，内联元素变成块元素，块元素的宽高被内容撑开
			3.绝对定位的元素相对于离它最近的开启了定位的祖先元素进行定位，
				如果所有的祖先元素都没有开启定位，则相对于浏览器的窗口进行定位。
				（一般情况下为一个元素开启绝对定位，都会同时为它的父元素开启相对定位）
			4.开启绝对定位以后，如果不设置偏移量元素的位置不会发生变化
			5.绝对定位会使元素提升一个层级	
		
	- 固定定位
		- 将元素的position属性设置为fixed时，则开启元素的固定定位
		- 固定定位也属于绝对定位，大部分特点都和绝对定位一样
		- 不同的是，固定定位的元素永远相对于浏览器的窗口进行定位，
			并且固定定位的元素不会随滚动条滚动。
			
	- 元素的透明
		- 使用opacity来设置元素的透明效果
		- 该样式需要一个0-1之间的值：
			0 表示完全透明
			1 表示完全不透明
			0.5 半透明
		- 但是该样式不支持IE8及以下的浏览器，在这些浏览器中需要使用一些特殊的方式：
			filter:alpha(opacity=值);
			- 该滤镜需要一个0-100之间的值
				0 表示完全透明
				100 表示完全不透明
				50 表示半透明

2.表格
	- 在网页中使用表格来表示一些格式化的数据
	- 使用table标签来创建一个表格
	- 例子：
		<table>
			<tr>
				<td></td>
				<td></td>
				<td></td>
			</tr>
			<tr>
				<td></td>
				<td></td>
				<td></td>
			</tr>
		</table>
		
	- tr表示表格中的一行，td表示表格中的一个单元格
	   表格是几列，由td最多的那行的决定
	- th表示表头中的单元格 
	  
	- 合并单元格
		- 横向的合并单元格
			colspan
		- 纵向的合并单元格
			rowspan
			
	- 长表格
		- 在网页中还为我们提供了几个标签，用来表示长表格
		- <thead>
			- 表示表格头部，可以将头部的tr放到thead中
		- <tbody>
			- 表示表格的主体，可以将主体的tr放到tbody中
			- 如果页面中没有tbody，浏览器会自动向表格中添加，并将tr放到tbody中
		- <tfoot>
			- 表示表格的底部，可以将底部的tr放到tfoot中
			
3.表单
	- 用户通过表单先服务器发送信息
	- 使用form标签来创建一个表单
			- form中有一个属性action，这个属性需要一个服务器的地址作为值，
				当提交表单时，表单中的信息将会提交到该地址。
	- 表单项
		input
			- type="text" 文本框
			- type="password" 密码框
			- type="radio" 单选按钮
			- type="checkbox" 多选框
			- type="submit" 提交按钮
			- type="reset" 重置按钮
			- type="button" 普通按钮
			
		select
			- 下拉列表
			- option
				- 下拉列表中的选项
				
		button		
			- type="submit" 提交按钮
			- type="reset" 重置按钮
			- type="button" 普通按钮
			
4.JavaScript
	- JavaScript简称JS，它是运行在浏览器端的脚本语言。
		它负责结构、表现、行为中的行为。
	- JS的编写位置：
		1.可以编写到标签的指定属性中
			<button onclick="alert('hello');">按钮</button>
			<a href="javascript:alert('hello');">超链接</a>
			
		2.可以将JS代码编写到script标签中
			<script type="text/javascript">
				alert("hello");
			</script>
			
		3.将js代码编写到外部的js文件中，然后通过script标签进行引入 *****
			<script type="text/javascript" src="script.js"></script>
			
	- 输出语句
		- 向浏览器窗口弹出一个警告框
			alert();
		- 向body中写一个内容
			document.write();
		- 向控制台输出一个内容
			console.log();
			
	- 基本语法：
		- 单行注释
			//
		- 多行注释
			/* */
		- JS中严格区分大小写	
		- JS中每条语句以分号结尾
			如果不写分号，浏览器会根据上下文自动添加，但是它会花费点时间，而且有时候会加错
			注意：语句结束以后一定一定一定要写分号
		- JS中会忽略多个空格和换行，可以通过空格和换行来对代码进行格式化

	- 字面量和变量
		- 字面量
			- 字面量就是一个一个的值，但是字面量都是不可变的
			- 比如：1 2 3 456  true false "hello"
			- 一般在程序中不会直接使用字面量
			
		- 变量
			- 变量可以用来保存字面量，而且变量中保存的字面量是可以改变的
			- 也可以通过变量来对字面量进行描述
			- 一般我们都是通过变量去保存字面量，而不直接使用字面量
			
			- 变量的使用
				- 声明变量
					- 使用var关键字来声明一个变量（如果使用未声明的变量，浏览器会报错）
						var a; var b;
						var a , b , c ,d;
						
				- 为变量进行赋值
					- 使用=来将一个字面量赋值给一个变量
						a = 123;
						b = 456;
						c = b;
						
				- 声明和赋值同时进行	
						var a = 123;
						var b = 456;
						var c = 1 , d = 2 , e = 3;
		
		
			

	





	