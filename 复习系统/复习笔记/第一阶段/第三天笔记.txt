1.超链接
	- 通过超链接可以使从一个页面跳转到另一个页面
	- 使用a标签来创建一个超链接
	- 例子：
		<a href="" target="">链接的文字</a>
	- 属性：
		href : 指定要打开页面的地址
			- 可以接收一个完整路径，比如：http://www.baidu.com
			- 也可以接收一个相对路径，比如：index.html
			- 也可以指定一个 #id属性值
				此时点击链接时，不会跳转到其他的页面，而是跳转到当前页面的指定位置
				
		target ：要打开页面的位置
			- 可选值：
				_self 默认值，在当前窗口打开页面
				_blank 在新的窗口打开页面
				
2.CSS
	- CSS负责页面的样式，属于结构表现行为中的表现
	- CSS叫做层叠样式表
	- CSS的编写的位置
		1.编写到元素的style属性中
			<p style="color:red;"></p>
			- 将样式编写style属性中，结构与表现耦合，不能对样式进行重用，并且不方便维护，不推荐使用
			
		2.编写到style标签中
			<style type="text/css">
				p{
					color:red;
				}
			</style>
			- 将样式编写到style标签中，使结构和表现进一步分离，可以使样式在当前页面中进行重用，方便维护，推荐使用
			
		3.编写到外部的css文件中，然后通过link标签引入
			<link rel="stylesheet" type="text/css" href="style.css" />
			- 将样式表编写到外部的CSS文件中，使结构和表现完全分离，可以在不同的页面中对样式表进行重用，
				方便维护，并且将样式写在外部的文件中，可以利用浏览器的缓存机制，提高用户访问速度，提高用户体验
				最推荐使用的方式
				
			<link rel="stylesheet" type="text/css" href="style.css" />
			<a href="">超链接</a>
			<img src="" />	 替换元素中的路径使用src，而非替换元素使用的是href
				
	- CSS的基本语法		
		- 选择器 声明块
		- 例子：p {color:red;}
		- 选择器：
			- 通过选择器可以选中页面中的指定元素，选择器后的声明块中的样式将会应用到这些元素上
			- 常用的选择器：
				- 元素选择器
					- 作用：根据标签名选中页面中的指定元素
					- 语法：标签名 {}
					- 例子：p{}  div{}  span{}
				
				- id选择器
					- 作用：根据元素的id属性值，选中一个元素
					- 语法：#id属性值 {}
					- 例子：#box1{}  #outer{} #hello{}
				
				- 类选择器
					- 作用：根据元素的class属性值，选中元素
					- 语法：.class属性值 {}
					
				- 选择器分组（并集选择器）
					- 作用：可以选中多个选择器对应的元素
					- 语法：选择器1 , 选择器2 , 选择器N{}
					- 例子：div , #box1 , .abc{}
				
				- 交集选择器
					- 作用：可以选择同时符合多个选择器的元素
					- 语法：选择器1选择器2选择器N{}
					- 例子：div.abc{} 
				
				- 通配选择器
					- 作用：可以选中页面中的所有的元素
					- 语法：*{}
					- 注意：通配选择器性能较差，尽量避免使用
				
				- 后代元素选择器
					- 作用：选中指定祖先元素的指定后代
					- 语法：祖先 后代{}
					- 例子：div span{}  div div div span{}
					- 注意：编写选择器时，越短性能越好
				
				- 子元素选择器
					- 作用：选中父元素的指定子元素
					- 语法：父元素 > 子元素{}
				
				- 伪类选择器
					- 伪类表示元素所处在的一种特殊的状态
					- a的伪类
						:link
							- 普通的链接（未访问过的链接）
						:visited
							- 访问过的链接
						:hover
							- 鼠标移入的链接
						:active
							- 鼠标正在点击的链接
							
				- 元素之间的关系
					父元素
						- 直接包含子元素的元素
					子元素
						- 直接被父元素包含的元素
					祖先元素
						- 直接或间接包含后代元素的元素
					后代元素
						- 直接或间接被祖先元素包含的元素
					兄弟元素
						- 拥有相同父元素的元素
			
		- 声明块
			- 声明块使用{}括起来，它里面是一个一个的声明，声明是一个名值对结构，一个样式名对应一个样式值，
				样式名和值之间使用:连接，每一个声明以;结束。
			- 常用样式：
				color:文字的颜色（前景色）
				background-color:背景颜色
				font-size:字体大小
				width:宽度
				height:高度
				
		- 块元素和内联元素
			- 块元素(block)
				- 块元素无论自身多小，都会独占页面的一行
				- 一般在页面中使用块元素进行布局
				- 一般都会使用块去包含内联，而不使用内联包含块
				- p元素中不能包含任何的块元素
				- a元素中可以包含任何元素，除了a本身
				
			- 内联元素(inline)
				- 内联元素只会占用自身大小的位置
				- 使用内联元素选中文本来为其设置样式
				
				
		- 样式的继承：
			- 祖先元素上设置样式也会同时应用到后代元素上，
				比如为祖先元素设置font-size或color 后代元素也会应用到相同的样式
			- 继承实际上是简化了我们的开发，但是并不是所有的样式都会被继承，
				比如：背景相关的 、 边框相关的 、 宽度、高度 。。。
				
		- 选择器的优先级（权重）
			- 当使用不同的选择器，为同一个元素设置相同的样式时，此时样式之间会发生冲突，
				到底应用哪个样式，由选择器的优先级决定，优先级高的优先显示。
			- 优先级：
				内联样式		 	1000
				id选择器			100	
				类和伪类选择器		10
				元素选择器			1
				通配选择器			0
				继承的样式			没有
				
				- 如果在样式的最后添加了一个 !important 则此时样式会获取到最高的优先级，
					但是在开发中要慎用。
					
			- 计算优先级时，需要将所有的选择器的优先级相加然后在比较，优先级的相加不会超过选择器的最大数量级,
				如果两个选择器的优先级一致，则谁在后边就用谁
				
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	