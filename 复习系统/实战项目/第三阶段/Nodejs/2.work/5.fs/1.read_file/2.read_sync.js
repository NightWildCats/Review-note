/*
	1. 同步读文件，显示文件中的内容
	2. 错误处理
	3. 同步和异步的区别（**重点理解**）
*/

// 同步读取文件
// 创建一个读取文件的对象
var fs = require('fs');
// 读取文件的路径
// var path = './content1.txt';
var path = './content.txt';

//使用 try{ } catch(err){ } 来进行错误处理
// 说明：预处理代码 在 try 中执行；当代码出现报错的时候，会跳入 catch 块中执行(一般用于输出错误的处理逻辑)

try {
	//同步读取文件
	//fs.readFileSync(文件路径) 这个会返回获取到的文件信息（在计算机中以buffer的形式存在）
  var data = fs.readFileSync(path);
  //通过 toString() 方法转换成字符串
  console.log(data.toString());

} catch(err) {
	//参数err 表示接收到的错误信息 但不会影响后面的代码执行
	console.error(err);

	//可以进行错误逻辑的处理
	if (err) {
		console.log('咦 你这个错误好牛逼！');
	}
}
console.log('咦 不知道咋回事，我就来了');


//总结：同步与异步的区别
/**
 * 同步：在文件读取时，使用同步的方式，会使用主线程进行依次读取，
 * 			当文件读取的这件事情执行完成之后再进行后续代码执行
 * 异步：在文件读取时，使用异步的方式，会在开一个分线程进行文件的读取操作，主线程继续执行后续代码。
 * 			当分线程读取完文件之后，会放入事件队列，等待主线程通过事件轮询，执行在等待队列中的事件
 */

/**
 * 错误处理：
 * 	异步：通过'错误优先'的原则，在读取回调中 对读取文件错误进行处理
 * 	同步：通过 try{ 预处理代码 } catch(err) { 错误处理 } 来进行错误的处理
 */



